{"version":3,"sources":["components/calendar/CalendarContext.tsx","components/calendar/CalendarTitle.tsx","components/common/Spinner.tsx","components/common/RestDataLoader.tsx","components/common/hooks/useAsync.tsx","mock/generator.ts","mock/calendarRepository.ts","services/calendarService.ts","components/calendar/CalendarWeek.tsx","components/calendar/CalendarControl.tsx","components/calendar/CalendarLegend.tsx","components/calendar/Calendar.tsx","page/calendar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["INIT_CONTEXT_STATE","getWeekData","setWeekData","CalendarContext","createContext","INIT_CALENDAR_STATE","SET_WEEK_DATA","calendarReducer","state","action","type","week","data","Error","CalendarContextProvider","children","useReducer","dispatch","Provider","value","useCalendarContext","useContext","CalendarTitle","className","titleWeek","moment","monday","isoWeekday","saturday","currWeek","format","renderTitle","Spinner","size","RestDataLoader","promise","useState","isLoading","setIsLoading","setData","useEffect","a","result","response","fetch","useAsync","promiseGetter","DAYS","CalendarWeekGenerator","isSunday","isOddSaturday","date","min","max","Math","floor","random","terms","i","push","timeSlotId","initTerms","this","initializeTerms","invalidTerms","initializeOddSaturdayOrPastDateTerms","weekDate","isEvenSaturday","today","weekToGenerate","isAfter","tuesday","wednesday","thursday","friday","isValidWeek","rSlot","randomIntFromInterval","TERMS_COUNT","rDay","length","day","tmpData","map","it","generator","weekData","generateCalendarWeek","slotState","tmpWeek","hasAlreadySelected","some","allSelected","Object","values","reduce","acc","filter","console","log","Promise","resolve","setTimeout","status","CalendarRepository","generateWeekData","request","isSelectionValid","reject","updateTimeSlotState","CalendarWeekLoader","CalendarWeek","calendarService","getMockCalendarWeekData","respone","context","slotSate","alert","then","catch","getSlotState","timeSlotIndex","timeSlots","timeSlot","find","renderTimeSlots","fromHour","toHour","startOf","hours","slotsToRender","dayName","add","slot","toLowerCase","onClick","onSlotClick","isToday","isSame","renderDay","toUpperCase","renderWeek","CalendarControl","onNext","onPrev","CalendarLegend","visible","setVisible","Calendar","setWeek","CalendarPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d7aa5c.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\nimport { CalendarWeekData } from \"../../dto/calendar\";\r\n\r\ninterface CalendarContextState {\r\n  getWeekData: (week: number) => CalendarWeekData | undefined;\r\n  setWeekData: (week: number, data: CalendarWeekData) => void;\r\n}\r\n\r\nconst INIT_CONTEXT_STATE: CalendarContextState = {\r\n  getWeekData: () => undefined,\r\n  setWeekData: () => null,\r\n};\r\n\r\nexport const CalendarContext = createContext(INIT_CONTEXT_STATE);\r\n\r\ninterface CalendarContextProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface CalendarState {\r\n  [key: number]: CalendarWeekData;\r\n}\r\n\r\nconst INIT_CALENDAR_STATE: CalendarState = {};\r\n\r\nconst SET_WEEK_DATA = \"SET_WEEK_DATA\";\r\nconst UPDATE_WEEK_DATA = \"ALTER_WEEK_DATA\";\r\n\r\ntype CalendarStateActions =\r\n  | { type: typeof SET_WEEK_DATA; week: number; data: CalendarWeekData }\r\n  | { type: typeof UPDATE_WEEK_DATA; week: number; data: CalendarWeekData };\r\n\r\nfunction calendarReducer(\r\n  state: CalendarState,\r\n  action: CalendarStateActions\r\n): CalendarState {\r\n  switch (action.type) {\r\n    case SET_WEEK_DATA:\r\n      return { ...state, [action.week]: action.data };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport function CalendarContextProvider({\r\n  children,\r\n}: CalendarContextProviderProps): JSX.Element {\r\n  const [state, dispatch] = useReducer(calendarReducer, INIT_CALENDAR_STATE);\r\n\r\n  function getWeekData(week: number): CalendarWeekData | undefined {\r\n    return state[week];\r\n  }\r\n\r\n  function setWeekData(week: number, data: CalendarWeekData): void {\r\n    dispatch({ type: SET_WEEK_DATA, week, data });\r\n  }\r\n\r\n  return (\r\n    <CalendarContext.Provider value={{ getWeekData, setWeekData }}>\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n}\r\n\r\nexport default function useCalendarContext(): CalendarContextState {\r\n  const context = useContext(CalendarContext);\r\n\r\n  return context;\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./style.css\";\r\n\r\ninterface CalendarTitleProps {\r\n  week: number;\r\n}\r\n\r\nexport default function CalendarTitle({\r\n  week,\r\n}: CalendarTitleProps): JSX.Element {\r\n  function renderTitle(): string {\r\n    const titleWeek = moment().week(week);\r\n    const monday = moment(titleWeek).isoWeekday(1);\r\n    const saturday = moment(titleWeek).isoWeekday(6);\r\n    const currWeek = moment().week();\r\n\r\n    if (currWeek === week) {\r\n      return `Current week (${monday.format(\"DD.MM\")} - ${saturday.format(\r\n        \"DD.MM\"\r\n      )})`;\r\n    } else if (currWeek + 1 === week) {\r\n      return `Next week (${monday.format(\"DD.MM\")} - ${saturday.format(\r\n        \"DD.MM\"\r\n      )})`;\r\n    } else\r\n      return `Week ${week} (${monday.format(\"DD.MM\")} - ${saturday.format(\r\n        \"DD.MM\"\r\n      )})`;\r\n  }\r\n\r\n  return <div className=\"title\">{renderTitle()}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\ntype SpinnerSize = \"small\" | \"medium\" | \"large\";\r\n\r\ninterface SpinnerProps {\r\n  size?: SpinnerSize;\r\n}\r\n\r\nexport default function Spinner({\r\n  size = \"medium\",\r\n}: SpinnerProps): JSX.Element {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className={`spinning-loader ${size}`} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { RestResponse } from \"../../dto/common\";\r\nimport useAsync from \"./hooks/useAsync\";\r\n\r\nimport Spinner from \"./Spinner\";\r\nimport \"./style.css\";\r\n\r\ninterface RestDataLoaderProps<DATA> {\r\n  children: (data: DATA) => React.ReactNode;\r\n  promiseGetter: () => Promise<RestResponse<DATA>>;\r\n}\r\nexport default function RestDataLoader<DATA>({\r\n  children,\r\n  promiseGetter,\r\n}: RestDataLoaderProps<DATA>): JSX.Element {\r\n  const { isLoading, data } = useAsync(promiseGetter);\r\n\r\n  return isLoading ? <Spinner /> : <>{data ? children(data) : \"error\"}</>;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { RestResponse } from \"../../../dto/common\";\r\n\r\nexport default function useAsync<DATA>(\r\n  promise: () => Promise<RestResponse<DATA>>\r\n): { isLoading: boolean; data?: DATA } {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<DATA>();\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      setIsLoading(true);\r\n      const result = await promise();\r\n      setData(result.response);\r\n      setIsLoading(false);\r\n    }\r\n\r\n    fetch();\r\n  }, [promise]);\r\n\r\n  return { isLoading, data };\r\n}\r\n","import moment from \"moment\";\r\nimport { CalendarTimeSlot, CalendarWeekData } from \"../dto/calendar\";\r\n\r\nconst TERMS_COUNT = 12;\r\nconst BREAK_TERM_INDEX = 6;\r\nconst PRE_GENERATED_TERMS = 15;\r\nconst DAYS: Array<keyof CalendarWeekData> = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n\r\n\r\nexport default class CalendarWeekGenerator {\r\n    private isValidWeek(week: number) {\r\n        const isSunday = moment().isoWeekday() === 7; \r\n        const isOddSaturday = moment().isoWeekday() === 6 && moment().date() % 2 === 0;\r\n        const weekInvalid = moment().week() === week && (isOddSaturday || isSunday);\r\n        return !weekInvalid;\r\n    }\r\n\r\n    private randomIntFromInterval(min: number, max: number): number { \r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n      }\r\n\r\n    private initializeTerms(): Array<CalendarTimeSlot> {\r\n        const terms: Array<CalendarTimeSlot> = [];\r\n        for(let i = 0; i < TERMS_COUNT; i++) {\r\n            terms.push({ timeSlotId: i, state: i !== BREAK_TERM_INDEX ? 'AVAILIBLE' : 'BREAK'})\r\n        }\r\n        return terms;\r\n    }\r\n\r\n    private initializeOddSaturdayOrPastDateTerms(): Array<CalendarTimeSlot> {\r\n        const terms: Array<CalendarTimeSlot> = [];\r\n        for(let i = 0; i < TERMS_COUNT; i++) {\r\n            terms.push({ timeSlotId: i, state: 'INVALID'})\r\n        }\r\n        return terms;\r\n    }\r\n\r\n    generateCalendarWeek(week: number): CalendarWeekData {\r\n        const initTerms = this.initializeTerms();\r\n        const invalidTerms = this.initializeOddSaturdayOrPastDateTerms();\r\n\r\n        const weekDate = moment().week(week);\r\n        const isEvenSaturday = moment(weekDate).isoWeekday(\"Saturday\").date() % 2 === 1;\r\n        const today = moment();\r\n\r\n        let weekToGenerate = {\r\n            monday: today.isAfter(moment(weekDate).isoWeekday(\"Monday\")) ? invalidTerms : initTerms,\r\n            tuesday: today.isAfter(moment(weekDate).isoWeekday(\"Tuesday\")) ? invalidTerms : initTerms,\r\n            wednesday: today.isAfter(moment(weekDate).isoWeekday(\"Wednesday\")) ? invalidTerms : initTerms,\r\n            thursday: today.isAfter(moment(weekDate).isoWeekday(\"Thursday\")) ? invalidTerms : initTerms,\r\n            friday: today.isAfter(moment(weekDate).isoWeekday(\"Friday\")) ? invalidTerms : initTerms,\r\n            saturday: isEvenSaturday ? initTerms : invalidTerms\r\n        };\r\n\r\n        if(this.isValidWeek(week)) {\r\n            for(let i = 0; i < PRE_GENERATED_TERMS; i++) {\r\n                let rSlot = this.randomIntFromInterval(0, TERMS_COUNT - 1);\r\n                rSlot = rSlot === BREAK_TERM_INDEX ? rSlot + this.randomIntFromInterval(-6, 5) : rSlot;\r\n    \r\n                let rDay = this.randomIntFromInterval(0, isEvenSaturday ? DAYS.length - 1 : DAYS.length - 2);\r\n                let day = DAYS[rDay];\r\n    \r\n                while(weekToGenerate[day][rSlot].state !== 'AVAILIBLE') {\r\n                    rSlot = this.randomIntFromInterval(0, TERMS_COUNT - 1);\r\n                    rSlot = rSlot === BREAK_TERM_INDEX ? rSlot + this.randomIntFromInterval(-6, 5) : rSlot;\r\n                    rDay = this.randomIntFromInterval(0, isEvenSaturday ? DAYS.length - 1 : DAYS.length - 2);\r\n                    day = DAYS[rDay];\r\n                }\r\n    \r\n                const tmpData = weekToGenerate[day].map(it => it.timeSlotId === rSlot ? { ...it, state: 'OCCUPIED'} : it)\r\n                weekToGenerate = { ...weekToGenerate, [day]: tmpData}\r\n            }\r\n        }\r\n\r\n        return weekToGenerate;\r\n    }\r\n}\r\n","import { CalendarTimeSlot, CalendarWeekData, TimeSlotState  } from \"../dto/calendar\";\r\nimport CalendarWeekGenerator from \"./generator\";\r\n\r\ninterface CalendarData {\r\n    [week: number]: CalendarWeekData;\r\n  }\r\n\r\nclass CalendarRepository {\r\n    data: CalendarData;\r\n    generator: CalendarWeekGenerator;\r\n\r\n    constructor() {\r\n        this.data = {}\r\n        this.generator = new CalendarWeekGenerator();\r\n    }\r\n\r\n    public generateWeekData(week: number): CalendarWeekData {\r\n        const weekData = this.generator.generateCalendarWeek(week);\r\n        this.data = { ...this.data, [week]: weekData};\r\n        return weekData;\r\n    }\r\n\r\n\r\n    public updateTimeSlotState(week: number, day: keyof CalendarWeekData, timeSlotId: number, slotState: TimeSlotState): CalendarWeekData {\r\n        const tmpWeek = this.data[week];\r\n        const tmpData = tmpWeek[day].map(it => it.timeSlotId === timeSlotId ? { ...it, state: slotState} : it);\r\n\r\n        const weekData = { ...tmpWeek, [day]: tmpData};\r\n        this.data = { ...this.data, [week]: weekData}\r\n        return weekData;\r\n    }\r\n\r\n    public isSelectionValid(week: number, day: keyof CalendarWeekData): boolean {\r\n        const tmpWeek = this.data[week];\r\n        const hasAlreadySelected = tmpWeek[day].some(it => it.state === 'SELECTED');\r\n        const reducedValues: Array<CalendarTimeSlot> = Object.values(tmpWeek).reduce((acc, it) => {\r\n            return [...acc, ...it];\r\n        }, []);\r\n        const allSelected = reducedValues.filter(it => it.state === 'SELECTED');\r\n        console.log(hasAlreadySelected);\r\n        return !hasAlreadySelected && allSelected.length <= 1;\r\n    }\r\n}\r\n\r\nexport default new CalendarRepository();","import { GetCalendarWeekResponse, UpdateTimeSlotRequest, UpdateTimeSlotResponse } from \"../dto/calendar\";\r\nimport CalendarRepository from \"../mock/calendarRepository\";\r\n\r\nclass CalendarService {\r\n    /**\r\n     * Based on assigment some sort of fetch for calendar data is expected.\r\n     * I've decided to mock BE call from data would come from, app mock\r\n     * contains logic for genereting calendar week data and also simulate \r\n     * async call\r\n     */\r\n    getMockCalendarWeekData(week: number): Promise<GetCalendarWeekResponse> {\r\n        return new Promise<GetCalendarWeekResponse>(resolve => setTimeout(() => {\r\n            resolve({\r\n                status: 'ok',\r\n                response: CalendarRepository.generateWeekData(week)\r\n            })\r\n        }, 2000))\r\n    }\r\n\r\n    updateTimeSlotState(request: UpdateTimeSlotRequest): Promise<UpdateTimeSlotResponse> {\r\n        const isSelectionValid = request.slotState === 'AVAILIBLE' || CalendarRepository.isSelectionValid(request.week, request.day);\r\n        return new Promise<UpdateTimeSlotResponse>((resolve, reject) => setTimeout(() => {\r\n            isSelectionValid ? resolve({\r\n                status: 'ok',\r\n                response: CalendarRepository.updateTimeSlotState(request.week, request.day, request.timeSlotId, request.slotState)\r\n            }) : reject(\"error\")\r\n        }, 1000));\r\n    }\r\n    \r\n}\r\n\r\nexport default new CalendarService();","import React, { useEffect, useState } from \"react\";\r\nimport moment, { Moment } from \"moment\";\r\n\r\nimport {\r\n  CalendarTimeSlot,\r\n  TimeSlotState,\r\n  CalendarWeekData,\r\n} from \"../../dto/calendar\";\r\nimport RestDataLoader from \"../common/RestDataLoader\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport calendarService from \"../../services/calendarService\";\r\nimport useCalendarContext from \"./CalendarContext\";\r\n\r\n/**\r\n *  I've decided to remove Sundays from doctor's calendar as by assigment\r\n *  on Sunday office is always closed, it makes calendar cleaner and also\r\n *  don't disrupt user with it's CLOSED status, hence better UX.\r\n */\r\nconst DAYS: Array<keyof CalendarWeekData> = [\r\n  \"monday\",\r\n  \"tuesday\",\r\n  \"wednesday\",\r\n  \"thursday\",\r\n  \"friday\",\r\n  \"saturday\",\r\n];\r\n\r\nexport default function CalendarWeekLoader({\r\n  week,\r\n}: {\r\n  week: number;\r\n}): JSX.Element {\r\n  const context = useCalendarContext();\r\n  const weekData = context.getWeekData(week);\r\n\r\n  return (\r\n    <div className=\"week\">\r\n      {weekData ? (\r\n        <CalendarWeek week={week} data={weekData} />\r\n      ) : (\r\n        <RestDataLoader\r\n          promiseGetter={() => calendarService.getMockCalendarWeekData(week)}\r\n        >\r\n          {(respone) => <CalendarWeek week={week} data={respone} />}\r\n        </RestDataLoader>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CalendarWeekProps {\r\n  week: number;\r\n  data: CalendarWeekData;\r\n}\r\n\r\nfunction CalendarWeek({ week, data }: CalendarWeekProps): JSX.Element {\r\n  const context = useCalendarContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    context.setWeekData(week, data);\r\n  }, [data]);\r\n\r\n  async function onSlotClick(\r\n    slotSate: TimeSlotState,\r\n    day: keyof CalendarWeekData,\r\n    timeSlotId: number\r\n  ) {\r\n    if (slotSate === \"INVALID\" || slotSate === \"BREAK\") {\r\n      alert(\r\n        \"This time slot is not valid for selection, please choose another time slot!\"\r\n      );\r\n    } else if (slotSate === \"OCCUPIED\") {\r\n      alert(\r\n        \"This time slot is already booked by another doctor patient, please choose another time slot!\"\r\n      );\r\n    } else if (slotSate === \"SELECTED\") {\r\n      setIsLoading(true);\r\n      await calendarService\r\n        .updateTimeSlotState({\r\n          week,\r\n          day,\r\n          timeSlotId,\r\n          slotState: \"AVAILIBLE\",\r\n        })\r\n        .then((result) => context.setWeekData(week, result.response));\r\n      setIsLoading(false);\r\n    } else if (slotSate === \"AVAILIBLE\") {\r\n      setIsLoading(true);\r\n      await calendarService\r\n        .updateTimeSlotState({\r\n          week,\r\n          day,\r\n          timeSlotId,\r\n          slotState: \"SELECTED\",\r\n        })\r\n        .then((result) => context.setWeekData(week, result.response))\r\n        .catch(() =>\r\n          alert(\r\n            \"You have already selected appoinment for that day or you have already two appoinments planned for the week\"\r\n          )\r\n        );\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function getSlotState(\r\n    timeSlotIndex: number,\r\n    timeSlots?: Array<CalendarTimeSlot>\r\n  ): TimeSlotState {\r\n    if (timeSlots) {\r\n      const timeSlot = timeSlots.find((it) => it.timeSlotId === timeSlotIndex);\r\n      return timeSlot ? timeSlot.state : \"INVALID\";\r\n    } else {\r\n      return \"INVALID\";\r\n    }\r\n  }\r\n\r\n  function renderTimeSlots(\r\n    day: Moment,\r\n    fromHour: number,\r\n    toHour: number,\r\n    timeSlots?: Array<CalendarTimeSlot>\r\n  ): JSX.Element[] {\r\n    day.startOf(\"day\").hours(fromHour);\r\n\r\n    const slotsToRender: Array<{\r\n      slotState: TimeSlotState;\r\n      day: Moment;\r\n      dayName: keyof CalendarWeekData;\r\n      timeSlotIndex: number;\r\n    }> = [];\r\n    let timeSlotIndex = 0;\r\n    while (day.hours() < toHour) {\r\n      slotsToRender.push({\r\n        slotState: getSlotState(timeSlotIndex, timeSlots),\r\n        day: moment(day),\r\n        dayName: DAYS[day.isoWeekday() - 1],\r\n        timeSlotIndex,\r\n      });\r\n\r\n      day.add(30, \"m\");\r\n      timeSlotIndex++;\r\n    }\r\n    return slotsToRender.map((slot) => {\r\n      const className = `timeslot ${slot.slotState.toLowerCase()}`;\r\n\r\n      return (\r\n        <div\r\n          onClick={() =>\r\n            onSlotClick(slot.slotState, slot.dayName, slot.timeSlotIndex)\r\n          }\r\n          className={className}\r\n          key={slot.day.format()}\r\n        >{`${slot.day.format(\"HH:mm\")}`}</div>\r\n      );\r\n    });\r\n  }\r\n\r\n  function renderWeek(): JSX.Element {\r\n    const weekDate = moment().week(week);\r\n\r\n    return (\r\n      <>\r\n        {DAYS.map((it) => {\r\n          const day = moment(weekDate).isoWeekday(it);\r\n          const isToday = day.isSame(moment());\r\n          const renderDay =\r\n            day.date() % 2 === 1 || it === \"saturday\"\r\n              ? renderTimeSlots(day, 8, 14, data[it])\r\n              : renderTimeSlots(day, 13, 19, data[it]);\r\n\r\n          return (\r\n            <div className=\"day-container\" key={it}>\r\n              <div>\r\n                <div className={`day ${isToday && \"current-day\"}`}>\r\n                  {it.toUpperCase()}\r\n                </div>\r\n                <i className={`date ${isToday && \"current-day\"}`}>\r\n                  {day.format(\"DD.MM\")}\r\n                </i>\r\n              </div>\r\n              {renderDay}\r\n            </div>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return !isLoading ? renderWeek() : <Spinner size=\"large\" />;\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\ninterface CalendarControlProps {\r\n  week: number;\r\n  onNext: () => void;\r\n  onPrev: () => void;\r\n}\r\nexport default function CalendarControl({\r\n  week,\r\n  onNext,\r\n  onPrev,\r\n}: CalendarControlProps): JSX.Element {\r\n  const currWeek = moment().week();\r\n\r\n  return (\r\n    <div className=\"control\">\r\n      {currWeek < week && (\r\n        <div className=\"control-button\" onClick={onPrev}>\r\n          {\"< Previous week\"}\r\n        </div>\r\n      )}\r\n      {currWeek < week && week !== 52 && <div className=\"divider\" />}\r\n      {week < 52 && (\r\n        <div className=\"control-button\" onClick={onNext}>\r\n          {\"Next week >\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function CalendarLegend(): JSX.Element {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <div className=\"legend-container\">\r\n      <div onClick={() => setVisible(!visible)} className=\"legend-button\">\r\n        Legend {!visible ? <>&#9660;</> : <>&#9650;</>}\r\n      </div>\r\n      {visible && (\r\n        <div>\r\n          <div className=\"legend\">\r\n            <div className=\"legend-color legend-availible\" />\r\n            <div className=\"legend-text\">Timeslot is availible to select</div>\r\n          </div>\r\n          <div className=\"legend\">\r\n            <div className=\"legend-color occupied\" />\r\n            <div className=\"legend-text\">\r\n              Timeslot is already selected by patient\r\n            </div>\r\n          </div>\r\n          <div className=\"legend\">\r\n            <div className=\"legend-color invalid\" />\r\n            <div className=\"legend-text\">\r\n              Dr. Albert Crentist is either not working or is on lunch break, or\r\n              it's past date\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"legend\">\r\n            <div className=\"legend-color selected\" />\r\n            <div className=\"legend-text\">\r\n              Timeslot you have previously selected\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { CalendarContextProvider } from \"./CalendarContext\";\r\nimport CalendarTitle from \"./CalendarTitle\";\r\nimport CalendarWeek from \"./CalendarWeek\";\r\nimport CalendarControl from \"./CalendarControl\";\r\nimport CalendarLegend from \"./CalendarLegend\";\r\n\r\nexport default function Calendar(): JSX.Element {\r\n  const [week, setWeek] = useState<number>(moment().week());\r\n\r\n  function setPrevWeek(): void {\r\n    setWeek(week - 1);\r\n  }\r\n\r\n  function setNextWeek(): void {\r\n    setWeek(week + 1);\r\n  }\r\n  return (\r\n    <CalendarContextProvider>\r\n      <CalendarTitle week={week} />\r\n      <CalendarWeek week={week} />\r\n      <CalendarControl week={week} onNext={setNextWeek} onPrev={setPrevWeek} />\r\n      <CalendarLegend />\r\n    </CalendarContextProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Calendar from \"../components/calendar/Calendar\";\r\nimport \"./page.css\";\r\n\r\nexport default function CalendarPage(): JSX.Element {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">Dr. Albert Crentist's office hours</div>\r\n      <Calendar />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport CalendarPage from \"./page/calendar\";\r\n\r\nexport default function App(): JSX.Element {\r\n  return (\r\n    <>\r\n      <CalendarPage />\r\n    </>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}